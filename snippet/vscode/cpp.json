{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"class define":{
		"prefix": "cla",
		"body": [
			"class $1",
			"{",
			"private:",
			"    $0",
			"public:",
			"}; // end class $1"
		],
		"description": "class 代码块"
	},
	"template class define":{
		"prefix": "tcla",
		"body": [
			"template<typename $0>",
			"class $1",
			"{",
			"private:",
			"public:",
			"}; // end class $1"
		],
		"description": "template class代码块"
	},
	"ifndef block":{
		"prefix": "indf",
		"body": [
			"#ifndef $1",
			"#define $1",
			"$0",
			"#endif // $1"
		],
		"description": "ifndef define"
	},
	"extern \"C\"":{
		"prefix": "extc",
		"body": [
			"#ifdef __cpluscplus",
			"extern \"C\" {",
			"#endif",
			"",
			"$0",
			"",
			"#ifdef __cpluscplus",
			"}",
			"#endif"
		],
		"description": "extern \"C\""
	},
	"friend operator":{
		"prefix": "fop",
		"body": "friend ${1:return_type} operator$0",
		"description": "friend operator"
	}
}